const axios = require('axios');
mp.events.add("packagesLoaded", () => {
    console.log('[TELEGRAM] Telegram connected');
});
const TELEGRAM_BOT_TOKEN = ''; // —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –≤ —Ç–≥

function sendTelegramMsg(chat_id, msg) {
    axios.post(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
        chat_id: chat_id,
        text: msg,
        parse_mode: 'Markdown' 
    })
    .then(response => {
    })
    .catch(error => {
        if (error.response) {
            console.error('–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö:', error.response.data);
            console.error('–û—à–∏–±–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:', error.response.status);
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤:', error.response.headers);
        } else if (error.request) {
            console.error('–ó–∞–ø—Ä–æ—Å –±—ã–ª —Å–¥–µ–ª–∞–Ω, –Ω–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –±—ã–ª–æ:', error.request);
        } else {
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
        }
    });
}

mp.events.addCommand('tg', (player, _, code) => {
    if (!code) {
        player.outputChatBox('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥.');
        return;
    }

    player.outputChatBox(`–í—ã –≤–≤–µ–ª–∏ –∫–æ–¥: ${code}`);

    DB.query('SELECT * FROM telegram WHERE code = ?', [code], (err, results) => {
        if (err) {
            console.error('–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ', err);
            player.outputChatBox('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–¥–∞.');
            return;
        }

        if (results.length === 0) {
            player.outputChatBox('–ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.');
            return;
        }

        const codeData = results[0];

        if (codeData.status === 0) {
            DB.query('UPDATE telegram SET status = 1 WHERE code = ?', [code], (updateErr) => {
                if (updateErr) {
                    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–¥–∞: ', updateErr);
                    player.outputChatBox('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–¥–∞.');
                    return;
                }

                DB.query('SELECT telegram FROM users WHERE id = ?', [player.static], (userErr, userResults) => {
                    if (userErr) {
                        console.error('–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Telegram ID: ', userErr);
                        player.outputChatBox('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞.');
                        return;
                    }

                    if (userResults.length > 0 && userResults[0].telegram) {
                        player.outputChatBox('–£ –≤–∞—Å —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∞–∫–∫–∞—É–Ω—Ç.');
                        return;
                    }

                    DB.query('UPDATE users SET telegram = ? WHERE id = ?', [codeData.idTG, player.static], (updateUserErr) => {
                        if (updateUserErr) {
                            console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram ID –≤ users: ', updateUserErr);
                            player.outputChatBox('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞.');
                            return;
                        }
                        
                        sendTelegramMsg(codeData.idTG, `üîó –ü—Ä–∏–≤—è–∑–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ \n\n–¢–µ–ª–µ–≥—Ä–∞–º –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –∞–∫–∫–∞—É–Ω—Ç—É \`${player.name}#${player.static}\`, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –≤—ã, —Ç–æ —Å—Ä–æ—á–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É.`);

                        player.outputChatBox('–ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!');
                    });
                });
            });
        } else if (codeData.status === 1) {
            player.outputChatBox('–ö–æ–¥ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.');
        }
    });
});
